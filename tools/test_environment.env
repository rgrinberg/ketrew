
#
# Functions to create a `_test_env/` directory containing useful test goodies:
#
# - a self-signed SSL certificate/key pair
# - 3 Configuration files (1 standalone, 1 client/server pair)
# - an “authorized_tokens” file for the server
# - a _test_env/env.env file providing aliases to call the application and the
# tests with different config-files
#

test_environment_dir=_test_env
test_standalone_config_file=$test_environment_dir/standalone-config-file.toml
test_server_config_file=$test_environment_dir/server-config-file.toml
test_client_config_file=$test_environment_dir/client-config-file.toml
test_authorized_tokens=$test_environment_dir/test-authorized-tokens
test_database_prefix=$test_environment_dir/database
test_certificate=$test_environment_dir/test-cert.pem
test_privkey=$test_environment_dir/test-key.pem
test_server_log=$test_environment_dir/logs-of-server.txt
test_command_pipe=$test_environment_dir/test-command.pipe
test_shell_env=$test_environment_dir/env.env

test_additional_findlib_plugin="findlib"
test_additional_findlib_plugin_code="let f () = Findlib.init ()"

set_test_additional_findlib_plugin () {
  if  ocamlfind query lwt.react > /dev/null  ; then
    export test_additional_findlib_plugin="lwt.react"
    export test_additional_findlib_plugin_code="let f () = Lwt_react.E.app"
  else
    export test_additional_findlib_plugin="graphics"
    export test_additional_findlib_plugin_code="let f () = Graphics.create_image 42 42"
  fi
  echo "Using package $test_additional_findlib_plugin as findlin-plugin"
}

ssl_cert_key () {
  mkdir -p $test_environment_dir/
  echo "Creating cert-key pair: $test_certificate, $test_privkey"
  openssl req -x509 -newkey rsa:2048 \
    -keyout $test_privkey -out $test_certificate \
    -days 10 -nodes -subj "/CN=test_ketrew" 2> /dev/null
}

test_config_file () {
local plugin_location="$PWD/_build/src/test/ketrew_dummy_plugin_test_lib.cmxs"
  echo "Creating $test_standalone_config_file"
  cat <<EOBLOB > $test_standalone_config_file
# Ketrew test configuration file
debug-level = 2
[plugins]
  ocamlfind =["lwt.unix", "$test_additional_findlib_plugin"]
  compiled = "$plugin_location"
[engine]
  database-path = "$test_database_prefix-standalone"
  host-timeout-upper-bound = 5.0
[ui]
  color = true
EOBLOB
  echo "Creating $test_server_config_file"
  cat <<EOBLOB > $test_server_config_file
# Ketrew test configuration file
debug-level = 2
[engine]
  database-path = "$test_database_prefix-client-server"
  host-timeout-upper-bound = 5.0
[ui]
  color = false
[plugins]
  ocamlfind =["lwt.unix", "$test_additional_findlib_plugin"]
  compiled = "$plugin_location"
[server]
  certificate = "$test_certificate"
  private-key = "$test_privkey"
  port = 8443
  authorized-tokens-path = "$test_authorized_tokens"
  return-error-messages = true
  log-path = "$test_server_log"
  daemonize = true
  command-pipe-path = "$test_command_pipe"
EOBLOB
  echo "Creating $test_client_config_file"
  cat <<EOBLOB > $test_client_config_file
# Ketrew test configuration file
debug-level = 2
[plugins]
  ocamlfind =["lwt.unix", "$test_additional_findlib_plugin"]
  compiled = "$plugin_location"
[client]
  connection = "https://127.0.0.1:8443"
  token = "nekot"
EOBLOB
  echo "Creating $test_authorized_tokens"
  cat << EOBLOB  >> $test_authorized_tokens
test1 dsafkdjshh4383497hfvfnfdsfli some comments
test2 dsaifdksafhkd8437189437tfodslcjdsacfaeo some more comments for test2
easy_auth nekot easy authentication
# commented line
weird-line-that-makes-a-warning
EOBLOB
}


test_environment () {
  echo "Creating $test_shell_env"
  local sconf="KETREW_CONFIGURATION=$test_standalone_config_file"
  local dconf="KETREW_CONFIGURATION=$test_server_config_file"
  local cconf="KETREW_CONFIGURATION=$test_client_config_file"
  mkdir -p $test_environment_dir
  cat << EOBLOB > $test_shell_env
export ktest_url=https://localhost:8443
alias kscli="$sconf ./ketrew"
alias kstest="$sconf ./ketrew-workflow-examples-test"
alias ksintegration="$sconf ./ketrew-integration-test"
alias kdserver="$dconf  ./ketrew"
alias kdclient="$cconf  ./ketrew"
alias kdtest="$cconf ./ketrew-workflow-examples-test"
alias kdintegration="$cconf ./ketrew-integration-test"
alias ksplugin_user="$sconf _build/src/test/dummy_plugin_user.native"
alias kdplugin_user="$cconf _build/src/test/dummy_plugin_user.native"
EOBLOB
}

